{"version":3,"sources":["App.js","actionTypes.js","serviceWorker.js","logoReducer.js","controlSpeedReducer.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","speed","left","top","changeSpeed","bind","assertThisInitialized","keyPress","sliderDefault","event","preventDefault","document","addEventListener","controlspeed","key","keyCode","moveLeft","moveUp","moveRight","moveDown","target","value","increaseSpeed","parseInt","logoposition","position","react_default","a","createElement","className","src","alt","style","type","min","max","onChange","onKeyDown","Component","connect","movement","control","dispatch","actionCreators","setTimeout","syncIncreaseSpeed","Boolean","window","location","hostname","match","initialState","logoReducer","arguments","length","undefined","action","updateState","objectSpread","leftPos","topPos","controlSpeedReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","next","console","log","result","getState","thunk","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.043de67b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport * as actionCreators from './actionTypes.js';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      speed : 2,\r\n      left : 5,\r\n      top : 5\r\n    }\r\n\r\n    this.changeSpeed = this.changeSpeed.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n    this.sliderDefault = this.sliderDefault.bind(this);\r\n  }\r\n\r\n  sliderDefault(event){\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentWillMount(){\r\n    document.addEventListener(\"keydown\",this.keyPress);\r\n  }\r\n\r\n  keyPress(event){\r\n\r\n    let speed = this.props.controlspeed.speed;\r\n\r\n    let key = event.keyCode;\r\n\r\n    /*Left Arrow*/\r\n\r\n    if (key === 37) {\r\n      this.props.moveLeft(speed);\r\n    }\r\n\r\n    /*Up Arrow*/\r\n\r\n    else if (key === 38) {\r\n      this.props.moveUp(speed);\r\n    }\r\n\r\n    /*Right Arrow*/\r\n    else if (key === 39) {\r\n      this.props.moveRight(speed);\r\n    }\r\n\r\n    /*Down Arrow*/\r\n    else if (key === 40) {\r\n      this.props.moveDown(speed);\r\n    }\r\n  }\r\n\r\n  changeSpeed(event){\r\n    let speed = event.target.value;\r\n\r\n    this.props.increaseSpeed(parseInt(speed));\r\n  }\r\n\r\n  render() {\r\n\r\n    let logoposition = {\r\n      left : this.props.position.left+\"px\",\r\n      top : this.props.position.top+\"px\"\r\n    };\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"project-title\">\r\n          Move Logo With Arrow Keys\r\n        </div>\r\n        <div className=\"logo-move-area\">\r\n          <img src=\"https://s3.amazonaws.com/media-p.slid.es/uploads/jhabdas/images/969312/react-logo-1000-transparent.png\" className=\"App-logo\" alt=\"logo\" style={ logoposition }/>\r\n        </div>\r\n        <div className=\"control-moving-speed\">\r\n            <input type=\"range\" min=\"1\" max=\"50\" value={this.props.controlspeed.speed} onChange={this.changeSpeed} onKeyDown={this.sliderDefault}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    position : state.movement,\r\n    controlspeed : state.control\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    moveLeft : (speed) => dispatch(actionCreators.moveleft(speed)),\r\n    moveRight : (speed) => dispatch(actionCreators.moveright(speed)),\r\n    moveUp : (speed) => dispatch(actionCreators.moveup(speed)),\r\n    moveDown : (speed) => dispatch(actionCreators.movedown(speed)),\r\n    increaseSpeed : (value) => dispatch(actionCreators.increasespeed(value))\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(App);\r\n","export const MOVE_LEFT = 'MOVE_LEFT';\r\nexport const MOVE_RIGHT = 'MOVE_RIGHT';\r\nexport const MOVE_UP = 'MOVE_UP';\r\nexport const MOVE_DOWN = 'MOVE_DOWN';\r\nexport const INCREASE_SPEED = 'INCREASE_SPEED';\r\n\r\nexport const moveleft = (speed) => {\r\n\treturn {\r\n\t\ttype : MOVE_LEFT,\r\n\t\tspeed : speed\r\n\t};\r\n}\r\n\r\nexport const moveright = (speed) => {\r\n\treturn {\r\n\t\ttype : MOVE_RIGHT,\r\n\t\tspeed : speed\r\n\t};\r\n}\r\nexport const moveup = (speed) => {\r\n\treturn {\r\n\t\ttype : MOVE_UP,\r\n\t\tspeed : speed\r\n\t};\r\n}\r\nexport const movedown = (speed) => {\r\n\treturn {\r\n\t\ttype : MOVE_DOWN,\r\n\t\tspeed : speed\r\n\t};\r\n}\r\n\r\nexport const syncIncreaseSpeed = (value) => {\r\n\treturn {\r\n\t\ttype : INCREASE_SPEED,\r\n\t\tvalue : value\r\n\t};\r\n};\r\n\r\nexport const increasespeed = (value) => {\r\n\r\n\treturn dispatch => {\r\n\t\tsetTimeout( () => {\r\n\t\t\tdispatch(syncIncreaseSpeed(value));\r\n\t\t},2000);\r\n\t};\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from './actionTypes.js';\r\n\r\nconst initialState = {\r\n\tleft : 5,\r\n\ttop : 5\r\n};\r\n\r\nconst logoReducer = (state = initialState,action) => {\r\n\r\n\tlet updateState = {...state};\r\n\r\n\tif(action.type === actionTypes.MOVE_LEFT){\r\n\r\n\t\tlet leftPos = updateState.left - action.speed;\r\n\r\n\t    if (leftPos <= action.speed) {\r\n\r\n\t    \tupdateState.left = 5;\r\n\r\n\t    \treturn updateState;\r\n\r\n\t    } else if (leftPos > 5) {\r\n\r\n\t        updateState.left = leftPos;\r\n\r\n\t        return updateState;\r\n\r\n\t    }\r\n\t}else if(action.type === actionTypes.MOVE_RIGHT){\r\n\r\n\t\tlet leftPos = updateState.left + action.speed;\r\n\r\n\t\tlet distanceRight = 450 - leftPos;\r\n\r\n\t\tif(distanceRight <= action.speed){\r\n\r\n\t\t\tupdateState.left = 445;\r\n\r\n\t\t\treturn updateState;\r\n\r\n\t\t}else if(leftPos < 450){\r\n\r\n\t\t\tupdateState.left = leftPos;\r\n\r\n\t\t\treturn updateState;\r\n\t\t}\r\n\t}else if(action.type === actionTypes.MOVE_UP){\r\n\r\n\t\tlet topPos = updateState.top - action.speed;\r\n\r\n\t\tif(topPos <= action.speed){\r\n\r\n\t\t\tupdateState.top = 5;\r\n\r\n\t\t\treturn updateState;\r\n\r\n\t\t} else if( topPos > 5) {\r\n\r\n\t\t\tupdateState.top = topPos;\r\n\r\n\t\t\treturn updateState;\r\n\t\t}\r\n\t}else if(action.type === actionTypes.MOVE_DOWN){\r\n\r\n\t\tlet topPos = updateState.top + action.speed;\r\n\r\n\t\tlet distanceDown = 450 - topPos;\r\n\r\n\t\tif(distanceDown <= action.speed){\r\n\r\n\t\t\tupdateState.top = 445;\r\n\r\n\t\t\treturn updateState;\r\n\r\n\t\t}else if(topPos < 445){\r\n\r\n\t\t\tupdateState.top = topPos;\r\n\r\n\t\t\treturn updateState;\r\n\t\t}\r\n\t}\r\n\r\n\treturn updateState;\r\n};\r\n\r\nexport default logoReducer;","import * as actionTypes from './actionTypes.js';\r\n\r\nconst initialState = {\r\n\tspeed : 2\r\n};\r\n\r\nconst controlSpeedReducer = (state = initialState,action) => {\r\n\r\n\tlet updateState = {...state};\r\n\r\n\tif(action.type === actionTypes.INCREASE_SPEED){\r\n\r\n\t\tif(typeof action.value !== \"undefined\"){\r\n\r\n\t\t\tupdateState.speed = action.value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn updateState;\r\n};\r\n\r\nexport default controlSpeedReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport logoReducer from './logoReducer.js';\r\nimport controlSpeedReducer from './controlSpeedReducer.js';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmovement : logoReducer,\r\n\tcontrol : controlSpeedReducer\r\n});\r\n\r\nconst userStepsLogger = store => {\r\n\treturn next => {\r\n\t\treturn action => {\r\n\t\t\tconsole.log(\"Middleware Dispatching \", action);\r\n\r\n\t\t\tconst result = next(action);\r\n\r\n\t\t\tconsole.log(\"Middleware Next State \",store.getState());\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(userStepsLogger, thunk)));\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}